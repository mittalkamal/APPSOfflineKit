//
//  {% swiftModelName %}.swift
//
//  DO NOT EDIT!
//  Generated by SoupToModelGenerator
//

import Foundation

final class {% swiftModelName %}: NSObject, Storable {
    typealias SoupObjectType = {% swiftModelName %}SoupObject

{% foreach(modelDesc in modelDescriptions) %}
{% if(modelDesc.nullable == TRUE) %}
{% if(modelDesc.fieldType == "string") %}
    var {% modelDesc.swiftPropertyName %}: String?
{% elseif(modelDesc.fieldType == "int") %}
    var {% modelDesc.swiftPropertyName %}: Int?
{% elseif(modelDesc.fieldType == "bool") %}
    var {% modelDesc.swiftPropertyName %}: Bool?
{% elseif(modelDesc.fieldType == "double") %}
    var {% modelDesc.swiftPropertyName %}: Double?
{% endif %}
{% else %}
{% if(modelDesc.fieldType == "string") %}
    var {% modelDesc.swiftPropertyName %}: String = ""
{% elseif(modelDesc.fieldType == "int") %}
    var {% modelDesc.swiftPropertyName %}: Int = 0
{% elseif(modelDesc.fieldType == "bool") %}
    var {% modelDesc.swiftPropertyName %}: Bool = false
{% elseif(modelDesc.fieldType == "double") %}
    var {% modelDesc.swiftPropertyName %}: Double = 0.0
{% endif %}
{% endif %}
{% endforeach %}

    var isLocallyCreated = false
    var isLocallyDeleted = false
    var isLocallyUpdated = false
    var isLocallyChanged = false
    var soupId: SoupId? = nil
}


extension {% swiftModelName %}SoupObject {

    func toModel() -> {% swiftModelName %} {
        let model = {% swiftModelName %}()
{% foreach(modelDesc in modelDescriptions) %}
        model.{% modelDesc.swiftPropertyName %} = {% modelDesc.swiftPropertyName %}
{% endforeach %}

        model.isLocallyCreated = isLocallyCreated
        model.isLocallyDeleted = isLocallyDeleted
        model.isLocallyUpdated = isLocallyUpdated
        model.isLocallyChanged = isLocallyChanged
        model.soupId = soupId

        return model
    }


    func update(from model: {% swiftModelName %}) {

{% foreach(modelDesc in modelDescriptions) %}
        self.{% modelDesc.swiftPropertyName %} = model.{% modelDesc.swiftPropertyName %}
{% endforeach %}

    }

}
